[
  {
    "id": "fastapi_auth_official",
    "title": "FastAPI Authentication Tutorial",
    "content": "FastAPI provides multiple ways to handle authentication and authorization. This official guide covers JWT tokens, OAuth2, and security best practices for your API endpoints. Learn how to protect your routes with dependency injection and secure user authentication flows.",
    "file_type": "documentation",
    "path": "fastapi.tiangolo.com/tutorial/security",
    "created_at": "2023-08-15T10:00:00Z",
    "modified_at": "2024-01-10T15:30:00Z",
    "github_stars": 5000,
    "view_count": 125000,
    "language": "en",
    "tags": ["fastapi", "authentication", "security", "jwt", "oauth2"],
    "source": "official"
  },
  {
    "id": "docker_security_guide",
    "title": "Docker Security Best Practices",
    "content": "Container security is critical for production deployments. This comprehensive guide covers image scanning, runtime security, network isolation, and secrets management. Secure your Docker containers against common vulnerabilities and attacks.",
    "file_type": "documentation", 
    "path": "docs.docker.com/security",
    "created_at": "2022-03-20T09:15:00Z",
    "modified_at": "2023-11-05T14:20:00Z", 
    "github_stars": 8000,
    "view_count": 200000,
    "language": "en",
    "tags": ["docker", "security", "containers", "production"],
    "source": "official"
  },
  {
    "id": "kubernetes_deployment",
    "title": "Kubernetes Deployment Guide",
    "content": "Deploy applications on Kubernetes clusters with confidence. This guide covers deployment strategies, rolling updates, health checks, and production-ready configurations. Master container orchestration and scaling.",
    "file_type": "documentation",
    "path": "kubernetes.io/docs/concepts/workloads/controllers/deployment",
    "created_at": "2024-01-15T11:00:00Z",
    "modified_at": "2024-02-20T16:45:00Z",
    "github_stars": 12000,
    "view_count": 180000,
    "language": "en", 
    "tags": ["kubernetes", "deployment", "orchestration", "containers"],
    "source": "official"
  },
  {
    "id": "fastapi_auth_french",
    "title": "Guide d'authentification FastAPI",
    "content": "Comment sécuriser votre API FastAPI avec l'authentification JWT. Ce guide couvre l'implémentation des tokens, la gestion des utilisateurs et les meilleures pratiques de sécurité pour protéger vos endpoints.",
    "file_type": "tutorial",
    "path": "blog.exemple.fr/fastapi-auth",
    "created_at": "2023-06-10T14:30:00Z",
    "modified_at": "2023-06-10T14:30:00Z",
    "github_stars": 45,
    "view_count": 3500,
    "language": "fr",
    "tags": ["fastapi", "authentification", "sécurité", "jwt"],
    "source": "community"
  },
  {
    "id": "fastapi_postgres_tutorial", 
    "title": "FastAPI + PostgreSQL Integration",
    "content": "Learn how to integrate PostgreSQL database with FastAPI using SQLAlchemy ORM. This tutorial covers database connections, models, migrations, and async operations for high-performance web applications.",
    "file_type": "tutorial",
    "path": "medium.com/@dev/fastapi-postgres",
    "created_at": "2023-09-05T12:00:00Z",
    "modified_at": "2023-09-05T12:00:00Z",
    "github_stars": 500,
    "view_count": 15000,
    "language": "en",
    "tags": ["fastapi", "postgresql", "database", "sqlalchemy"],
    "source": "community"
  },
  {
    "id": "docker_compose_guide",
    "title": "Docker Compose for Development",
    "content": "Simplify your development workflow with Docker Compose. Define multi-container applications, manage dependencies, and create reproducible development environments. Perfect for microservices architecture.",
    "file_type": "tutorial", 
    "path": "dev.to/docker-compose-guide",
    "created_at": "2022-11-20T10:30:00Z",
    "modified_at": "2022-11-20T10:30:00Z",
    "github_stars": 800,
    "view_count": 25000,
    "language": "en",
    "tags": ["docker", "compose", "development", "microservices"],
    "source": "community"
  },
  {
    "id": "python_async_patterns",
    "title": "Modern Python Async Patterns",
    "content": "Master asynchronous programming in Python with async/await, asyncio, and concurrent patterns. Learn about event loops, coroutines, and performance optimization for I/O-bound applications in Python 3.11+.",
    "file_type": "tutorial",
    "path": "realpython.com/async-patterns", 
    "created_at": "2024-02-01T09:00:00Z",
    "modified_at": "2024-02-01T09:00:00Z",
    "github_stars": 300,
    "view_count": 8000,
    "language": "en",
    "tags": ["python", "async", "asyncio", "performance"],
    "source": "community"
  },
  {
    "id": "api_security_fr",
    "title": "Sécuriser une API REST",
    "content": "Les meilleures pratiques pour sécuriser vos API REST. Authentification, autorisation, chiffrement HTTPS, validation des données et protection contre les attaques courantes comme CSRF et injection SQL.",
    "file_type": "blog",
    "path": "blog.tech.fr/securiser-api",
    "created_at": "2023-04-12T15:20:00Z", 
    "modified_at": "2023-04-12T15:20:00Z",
    "github_stars": 25,
    "view_count": 1200,
    "language": "fr",
    "tags": ["api", "sécurité", "rest", "authentification"],
    "source": "blog"
  },
  {
    "id": "containerization_guide",
    "title": "Container Deployment Strategies",
    "content": "Comprehensive guide to container deployment using Docker and Kubernetes. Covers blue-green deployments, canary releases, and rolling updates for zero-downtime applications in production environments.",
    "file_type": "documentation",
    "path": "containerization-guide.io",
    "created_at": "2023-07-10T13:45:00Z",
    "modified_at": "2023-12-15T11:20:00Z",
    "github_stars": 1200,
    "view_count": 35000,
    "language": "en", 
    "tags": ["containers", "deployment", "kubernetes", "production"],
    "source": "community"
  },
  {
    "id": "advanced_ml_patterns",
    "title": "Advanced Machine Learning Patterns",
    "content": "Explore advanced ML engineering patterns for production systems. Feature stores, model versioning, A/B testing for ML, and monitoring model performance in real-time applications.",
    "file_type": "blog",
    "path": "ml-engineering.blog/advanced-patterns",
    "created_at": "2021-08-30T16:00:00Z",
    "modified_at": "2021-08-30T16:00:00Z", 
    "github_stars": 50,
    "view_count": 800,
    "language": "en",
    "tags": ["machine-learning", "mlops", "production", "patterns"],
    "source": "blog"
  },
  {
    "id": "web_framework_comparison",
    "title": "Python Web Framework Comparison 2024",
    "content": "Comprehensive comparison of FastAPI, Django, Flask, and other Python web frameworks. Performance benchmarks, use cases, and recommendations for different project types in 2024.",
    "file_type": "blog",
    "path": "pythondev.com/framework-comparison",
    "created_at": "2024-01-05T10:15:00Z",
    "modified_at": "2024-01-05T10:15:00Z",
    "github_stars": 150,
    "view_count": 12000,
    "language": "en",
    "tags": ["python", "frameworks", "fastapi", "django", "flask"],
    "source": "blog"
  },
  {
    "id": "performance_optimization",
    "title": "Python Performance Optimization Tips",
    "content": "Legacy techniques for optimizing Python performance. Profiling, caching strategies, and micro-optimizations. Note: Some techniques may be outdated for Python 3.8+ versions.",
    "file_type": "blog", 
    "path": "oldschool-python.com/performance",
    "created_at": "2020-05-15T08:30:00Z",
    "modified_at": "2020-05-15T08:30:00Z",
    "github_stars": 30,
    "view_count": 500,
    "language": "en",
    "tags": ["python", "performance", "optimization", "legacy"],
    "source": "blog"
  }
]